/*
Storybook: Open Source software for novelists and authors.
Copyright (C) 2008 - 2012 Martin Mustun

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package storybook.model.hbn.entity;

import org.w3c.dom.Node;

/**
 * Species generated by hbm2java
 *
 * @hibernate.class
 *   table="SPECIES"
 */
@SuppressWarnings("serial")
public class Species extends AbstractEntity { // New Species class
	
	private String name = "";
	
	public Species() {
		
	}
	
	public Species(String name) {
		this.name = name;
	}
	
	/**
	 * @hibernate.id
	 *   column="ID"
	 *   generator-class="increment"
	 *   unsaved-value="null"
	 */
	public Long getId() {
		return this.id;
	}
	
	public void setId(Long id) {
		this.id = id;
	}
	
	/**
	 * @hibernate.property
	 */
	public String getName() {
		return this.name;
	}
	
	public void setName(String name) {
		this.name = name;
	}

	@Override
	public String toString() {
		return getName();
	}
	
	public boolean isHuman() {
		return id == 1;
	}
	
	@Override
	public String toCsv(String quoteStart,String quoteEnd, String separator) {
		StringBuilder b=new StringBuilder();
		b.append(quoteStart).append(xmlAttribute("id", getId().toString())).append(quoteEnd).append(separator);
		b.append(quoteStart).append(getName()).append(quoteEnd).append(separator);
		return(b.toString());
	}
	
	@Override
	public String toHtml() {
		return(toCsv("<td>","</td>","\n"));
	}
	
	@Override
	public String toText() {
		return(toCsv("","","\t"));
	}
	
	@Override
	public String toXml() {
		StringBuilder b=new StringBuilder();
		b.append(xmlTab(1)).append("<species \n");
		b.append(xmlCommon());
		b.append(xmlAttribute("name", getName()));
		b.append(xmlTab(2)).append(" />\n");
		return(b.toString());
	}
	
	public static Species fromXml(Node node) {
		Species p=new Species();
		p.setId(getXmlLong(node,"id"));
		p.setName(getXmlString(node,"name"));
		return(p);
	}
	
	@Override
	@SuppressWarnings("EqualsWhichDoesntCheckParameterClass")
	public boolean equals(Object obj) {
		if (!super.equals(obj)) {
			return false;
		}
		Species test = (Species) obj;
		boolean ret = true;
		ret = ret && equalsStringNullValue(name, test.getName());
		return ret;
	}
	
	@Override
	public int hashCode() {
		int hash = super.hashCode();
		hash = hash * 31 + name.hashCode();
		return hash;
	}
	
}
